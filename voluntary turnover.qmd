---
title: "Voluntary Turnover"
format: html
editor: visual
---

```{r}
#| label: setup
#| warning: false
library(tidyverse)

directory_active <- "C:/Users/610171734/OneDrive - Regal Rexnord/Documents/2024/2024_Core Value Drivers_Reporting/inputs/2024_HC"

directory_terms <- "C:/Users/610171734/OneDrive - Regal Rexnord/Documents/2024/2024_Core Value Drivers_Reporting/inputs/2024_Terms"

read_and_combine <- function(directory_path, row_skip) {
  files <- list.files(directory_path, full.names = TRUE, pattern = "*.xlsx")
  data_list <- lapply(files, function(file) {
    data <- readxl::read_xlsx(file, sheet = "Raw Data", skip = row_skip) |> 
      janitor::clean_names() |> 
      filter(worker_type == "Employee") 
    data <- data |> 
      mutate(source_file = basename(file)) |> 
      mutate(effective_date = str_extract(source_file, 
                                          "(?<=2024 ).*(?=\\.xlsx)") |> ymd())
    return(data)
  })
  combined_data <- bind_rows(data_list)
  return(combined_data)
}

headcount_data <- read_and_combine(directory_path = directory_active, 
                                   row_skip = 17)

termination_data <- read_and_combine(directory_path = directory_terms, 
                                     row_skip = 12)
```

```{r}
#| label: calculate_turnover_monthly_files

monthly_turnover_rate_monthly_files <- termination_data |> 
  group_by(month = floor_date(termination_date, "month")) |> 
  summarize(terminations = n()) |> 
  left_join(
    headcount_data |> 
      group_by(month = floor_date(effective_date, "month")) |> 
      summarize(headcount = n()), by = "month") |> 
  mutate(turnover_rate = (terminations / headcount) * 100)

```

```{r}
#| label: calculate_turnover_at_file

active_and_terminated <- readxl::read_xlsx("inputs/People Analytics - AT.xlsx", skip =1) |> 
  janitor::clean_names() |> 
  filter(segment_function != "Industrial Systems")

a_t_employees <- active_and_terminated |> 
  filter(worker_type == "Employee")

months_included <- seq(as.Date("2024-01-01"), as.Date("2024-12-31"), by = "month")

last_day_of_month <- ceiling_date(months_included, "month") - days(1)

# data frame with all months
monthly_data <- tibble(last_day_of_month = last_day_of_month)

monthly_turnover_rate_at_file <- monthly_data |>
  rowwise() |> 
  mutate(
    previous_month = floor_date(last_day_of_month, unit = "month") - days(1),
    terminations = sum(!is.na(a_t_employees$termination_date) & 
                       a_t_employees$termination_date <= last_day_of_month & 
                       a_t_employees$termination_date > previous_month),
    headcount = sum(a_t_employees$hire_date <= last_day_of_month & 
                      (is.na(a_t_employees$termination_date) |
                         a_t_employees$termination_date >= last_day_of_month))) |> 
  ungroup() |> 
  mutate(turnover_rate = terminations / headcount)
```

FAQ:

-   Associates are included in headcount if their termination day is on or after the last day of the month (e.g., an Associate will be included in January's headcount if their termination date is 1/31 or later).

```{r}
jan_hc <- readxl::read_xlsx("C:/Users/610171734/OneDrive - Regal Rexnord/Documents/2024/2024_Core Value Drivers_Reporting/inputs/2024_HC/RRX - Data Validation_1 JAN2024 2024-01-31.xlsx", sheet = "Raw Data", skip = 17) |> 
  janitor::clean_names()

tmp <- jan_hc |> 
  filter(segment_function_l1 != "Industrial Systems") |> 
  filter(worker_type == "Employee")

# Filter to include only employees in the effective date headcount
tmp_headcount <- active_and_terminated_employees %>%
  filter(hire_date <= "2024-01-31" & 
         (is.na(termination_date) | termination_date >= "2024-01-31"))

# Write the filtered data to a CSV file
write.csv(tmp_headcount, "tmp_jan_headcount.csv", row.names = FALSE)
```

# HIPO Jerry Morton

```{r}
a_t_aip <- active_and_terminated |> 
  filter(x9box_numeric %in% c("3.3", "3.2", "2.3")) |> 
  filter(x9box_potential != "Too New To Rate" & 
           x9box_potential != "New to Company") |> 
  filter(management_chain_level_2 == "Jerry Morton")

months_included <- seq(as.Date("2025-01-01"), as.Date("2025-01-31"), by = "month")

last_day_of_month <- ceiling_date(months_included, "month") - days(1)

# data frame with all months
monthly_data <- tibble(last_day_of_month = last_day_of_month)

monthly_turnover_rate_at_file <- monthly_data |>
  rowwise() |> 
  mutate(
    previous_month = floor_date(last_day_of_month, unit = "month") - days(1),
    terminations = sum(!is.na(a_t_aip$termination_date) & 
                       a_t_aip$termination_date <= last_day_of_month & 
                       a_t_aip$termination_date > previous_month),
    headcount = sum(a_t_aip$hire_date <= last_day_of_month & 
                      (is.na(a_t_aip$termination_date) |
                         a_t_aip$termination_date >= last_day_of_month))) |> 
  ungroup() |> 
  mutate(turnover_rate = terminations / headcount)
```
