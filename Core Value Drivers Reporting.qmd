---
title: "Core Value Drivers Reporting"
format: html
---

# Internal Fill Rate

- Pull “RRX – Employee Demographics” Report in Workday
  - Effective as of Date: Last date in period of interest (e.g., 1/31/2025)
  - Organization: Regal Rexnord Team (Louis Pinkham)
- Pull "RRX - 9Box" Report in Workday *NEED ACCESS*
  - Supervisory Organization: Regal Rexnord Team (Louis Pinkham)
  - Include Subordinate Organizations
  - Click hyperlink "Toal" above visual 9Box
  - Export to Excel

```{r}
#| warning: false
library(tidyverse)

# specify period
start_date <- as.Date("2025-01-01")
end_date <- Sys.Date()

# active employees
employment_demographics <- readxl::read_xlsx("inputs/RRX - Employment Demographics.xlsx", 
                                             skip = 12) |> 
  janitor::clean_names()

# previous period active employees to match job changes
previous_demographics <- readxl::read_xlsx("inputs/RRX - Employment Demographics_2024.xlsx", skip = 12) |> 
  janitor::clean_names() |> 
  select(sso_number, job_profile, career_level, manager_sso) |> 
  rename_with(~ paste0(., "_previous"), -sso_number)

# temp time in position
time_in_position <- readxl::read_xlsx("inputs/temp-time in role.xlsx", skip = 17) |> 
  janitor::clean_names() |> 
  select(employee_id, time_in_job_profile_start_date) 

# add time in position to main file
df <- employment_demographics |> 
  left_join(time_in_position, by = c("sso_number" = "employee_id")) |> 
  left_join(previous_demographics, by = "sso_number")

# all job changes to compare
job_changes <- readxl::read_xlsx("inputs/RRX_-_Worker_Data_-_Hires_and_Job_Changes.xlsx", skip = 7) |> 
  janitor::clean_names() |> 
  filter(str_detect(business_process_reason, regex("hire employee|promotion|lateral move", ignore_case = TRUE)))


```

- Add column [Internal/External]
  - If Hire Date = [Time in Job Profile Start Date] then "External"
  - If Hire Date < [Time in Job Profile Start Date] then "Internal"
  
```{r}
df <- df |> 
  mutate(internal_external = case_when(
    hire_date == time_in_job_profile_start_date ~ "External",
    hire_date < time_in_job_profile_start_date ~ "Internal",
    TRUE ~ "Error"
  ))
```

- Add column to identify changes from previous period file

```{r}
df <- df |> 
  mutate(worker_change = case_when(
    job_profile != job_profile_previous ~ TRUE,
    career_level != career_level_previous ~ TRUE,
    # manager_sso != manager_sso_previous ~ TRUE,
    TRUE ~ FALSE
  )) |> 
  filter(worker_change == "TRUE")
```


- Filter on [Time in Job Profile Start Date]
  - (1/1/{yyyy}) < [Time in Job Profile Start Date] < Last day in period
  - Feb update example: 1/1/2025 < [Time in Job Profile Start Date] < 1/31/2025
  
```{r}
df <- df |> 
  filter(time_in_job_profile_start_date > start_date & time_in_job_profile_start_date < end_date)
```

- Filter on [Career Level]
  - Career Level != M1
  
```{r}
df_manager <- df |> 
  filter(!career_level %in% c("AT1", "AT2", "AT3", "M1") & !is.na(career_level))
```

Data Integrity

- Compare against worker data 

```{r}
job_changes_manager <- job_changes |> 
  filter(!new_career_level %in% c("AT1", "AT2", "AT3", "M1") & !is.na(new_career_level))
```

```{r}
diff_df_manager <- df_manager |> 
  anti_join(job_changes_manager, by = c("sso_number" = "employee_id"))
```

```{r}
diff_job_changes_manager <- job_changes_manager |> 
  anti_join(df_manager, by = c("employee_id" = "sso_number"))
```

- Explore differences

```{r}
writexl::write_xlsx(
  list(
    diff_df_manager = diff_df_manager,
    diff_job_changes_manager = diff_job_changes_manager
  ),
  path = "data_discrepancies.xlsx"
)
```

  
TO DO:
- Add Time in Job Profile Start Date to reports (Potentially WQL Alias: timeInJobProfileStartDate)
- Get access to RRX - 9Box Report (time in job profile)
- Clarify career_levels to exclude