---
title: "Untitled"
format: html
---


```{r}
library(tidyverse)

# read in helper functions
source("helper_functions.R")

# specify period: first date of current year and last day of previous month
start_date <- as.Date(floor_date(Sys.Date(), "year"))
end_date <- as.Date(floor_date(Sys.Date(), "month") - days(1))

# use for 2024 file
# start_date <- as.Date("2024-01-01")
# end_date <- as.Date("2024-12-31")

# get all months included in period
months_included <- seq(start_date, end_date, by = "month")

# get the last date of each month
last_day_of_month <- ceiling_date(months_included, "month") - days(1)

# data frame with all months
monthly_data <- tibble(last_day_of_month = as.Date(last_day_of_month))

# get active and terminated, add career_level bucket
active_and_terminated <- readxl::read_xlsx("inputs/People Analytics - AT.xlsx", skip = 4) |> 
  janitor::clean_names() |> 
  add_buckets()
```

```{r}
# special IPS AIP hipo turnover
output_ips_hipo <- paste0("IPS HIPO Voluntary Turnover ", start_date, " to ", end_date, ".csv")

# add filters for aip metric
ips_at <- active_and_terminated |>
  apply_general_filters() |> 
  filter(career_level_bucket != "DL_IDL") |>  
  filter(management_chain_level_2 == "Jerry Morton") |> 
  mutate(draft_complete = case_when(
        draft_order > 0 ~ "Complete",
        TRUE ~ "Incomplete"
  ))

ips_hipo <- ips_at |> 
    filter(x9box_numeric %in% c("3.3", "3.2", "2.3")) |> 
    filter(x9box_potential != "Too New To Rate" & 
            x9box_potential != "New to Company")

# run formula without grouping variable, remove "enterprise" column
ips_aip_hipo <- calculate_voluntary_turnover_monthly(df = ips_hipo, grouping_var = NULL) |> 
  select(-Enterprise)

# writ einto ips_aip outputs
write.csv(ips_aip_hipo, paste0("outputs/ips_aip/", output_ips_hipo), 
  row.names = FALSE)
```


```{r}
ips_prof <- ips_at |> 
    filter(career_level_bucket != "Administrative_Technical") |> 
    mutate(tenured = case_when(
        hire_date <= Sys.Date() %m-% months(6) ~ "Yes",
        TRUE ~ "No")) |> 
    filter(tenured == "Yes")

calculate_draft_rank_completion <- function(df = ips_at, grouping_var) {
    df |> 
        group_by(across(all_of(grouping_var)), draft_complete) |> 
        summarize(count = n(), .groups = "drop_last") |> 
        group_by(across(all_of(grouping_var))) |> 
        complete(draft_complete = c("Complete", "Incomplete"), 
             fill = list(count = 0)) |>  
        mutate(total = sum(count),
           completion_rate = round(count / total, 4)) |> 
        ungroup() |> 
        filter(draft_complete == "Complete") |> 
        arrange(desc(completion_rate)) |> 
        select(-draft_complete)
}
```


```{r}
ips_draft_order_completion <- map(grouping_vars, ~calculate_draft_rank_completion(ips_at, .x)) |> 
    set_names(output_sheet_names)

writexl::write_xlsx(ips_draft_order_completion, paste0("outputs/ips_aip/IPS Draft Order Completion ", start_date, " to ", end_date, ".xlsx"))
```